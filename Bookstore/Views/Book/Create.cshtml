@model Bookstore.ViewModels.BookAuthorViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>BookAuthorViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                @if (ViewBag.Message != null)
                {
                    <span style="color:red">@ViewBag.Message</span>
                    <select style="border-color:red" asp-for="AuthorID" class="form-control" asp-items="@(new SelectList(Model.Authors, "id", "FullName"))"></select>
                    <span asp-validation-for="AuthorID" class="text-danger"></span>
                }
                else
                {
                    <label asp-for="AuthorID" class="control-label"></label>
                    <select asp-for="AuthorID" class="form-control" asp-items="@(new SelectList(Model.Authors, "id", "FullName"))"></select>
                    <span asp-validation-for="AuthorID" class="text-danger"></span>
                }

            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-outline-info">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
